@model WeiXinSetIM

@using (Ajax.BeginForm("WeiXinSet", null, new AjaxOptions()
{
    OnBegin = "onBegin",
    OnComplete = "onComplete",
    //   Confirm = "Are you sure you want to save this User?"
    OnSuccess = "onSuccess"

}, new { @class = "form-horizontal", role = "form" }))
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

 
    <div class="form-group">
        @Html.LabelFor(model => model.AppId, new { @class = "col-md-2 control-label" })
        <div class="col-md-5">
            @Html.TextBoxFor(model => model.AppId, new { @class = "form-control"  })
            @Html.ValidationMessageFor(model => model.AppId)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.AppSecret, new { @class = "col-md-2 control-label" })
        <div class="col-md-5">
            @Html.TextBoxFor(model => model.AppSecret, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AppSecret)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Token, new { @class = "col-md-2 control-label" })
        <div class="col-md-5">
            @Html.TextBoxFor(model => model.Token, new { @class = "form-control"})
            @Html.ValidationMessageFor(model => model.Token)
        </div>
    </div>
    

    <div class="form-group">
        @Html.LabelFor(model => model.EncodingAESKey, new { @class = "col-md-2 control-label" })
        <div class="col-md-5">
            @Html.TextBoxFor(model => model.EncodingAESKey, new { @class = "form-control"})
            @Html.ValidationMessageFor(model => model.EncodingAESKey)
        </div>
    </div>
    

    <div class="form-group">
        <div class="col-sm-offset-2 col-md-3">
            <button type="submit" class="btn btn-primary" id="btnSave"><i class="fa fa-save fa-fw"></i>保存</button>
        </div>
        @*<div class="col-md-7">
                @TempData["message"]
            </div>*@
    </div>
}