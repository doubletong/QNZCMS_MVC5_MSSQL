@model CategoryListVM
@{
    Layout = "~/Areas/Admin/Views/Shared/Layouts/_Layout2019.cshtml";
    ViewBag.Title = EntityNames.Category;
}

<div class="row mb-3">
    <div class="col-sm">
        @using (Html.BeginForm("Index", "ArticleCategory", FormMethod.Get, new { @class = "form-inline" }))
        {
            <div class="form-group">
                <label class="sr-only" for="Keyword">关键字</label>
                @Html.TextBoxFor(model => model.Keyword, new { @class = "form-control mr-sm-2", placeholder = "关键字" })
            </div>
            <button type="submit" class="btn btn-primary"><i class="iconfont icon-search"></i> 查找</button>
        }
    </div>
    <div class="col-sm-auto">
        <a class="btn btn-primary" href="@Url.Action("Edit")"><i class="iconfont icon-edit"></i> @string.Format("{0}{1}", Buttons.Add, EntityNames.Category)</a>
        @*<a class="btn btn-outline-secondary createIndex" href="#" data-url="@Url.Action("CreateIndex")"><i class="iconfont icon-securityscan"></i> @Buttons.CreateIndex</a>*@
    </div>

</div>


<div class="table-responsive">

    <table class="table table-hover table-striped table-vmiddle">
        <thead>
            <tr>
                <th>
                    主题
                </th>
                <th>
                    SEO网址
                </th>
                <th>
                    排序
                </th>


                <th>
                    激活？
                </th>
                <th>
                    操作
                </th>
            </tr>
        </thead>
        <tbody id="tbList">
            @foreach (var item in Model.Categories)
            {
                Html.RenderPartial("_CategoryItem", item);
            }
        
        </tbody>
    </table>
    
</div>


<div class="container-fluid pt-3" style="background-color: #fff;">
    <div class="row">
        <div class="col">
            @Html.PagedListPager(Model.Categories, page => Url.Action("Index", new { page = page, keyword = Model.Keyword }), new PagedListRenderOptions()
            {
                LiElementClasses = new List<string> { "page-item" }

            })
        </div>
        <div class="col-md-auto">
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon3">总记录<strong>@Model.TotalCount</strong>条，分页</span>
                </div>
                @Html.DropDownListFor(m => Model.PageSize, (SelectList)ViewBag.PageSizes, "分页", new { @class = "custom-select" })
            </div>

        </div>
    </div>

</div>

<!-- end main container -->

<div id="edit-container">
</div>

<form id="anti-form" method="post">
    @Html.AntiForgeryToken()
</form>

@section header{
    <style>
        .open:focus {
            text-decoration: none;
        }

        .subItem td:first-child {
            padding-left: 20px;
        }
    </style>
}
@section footer {
    @Scripts.Render("~/bundles/jqueryvalWithBootstrap")

    <script>

        function OnSuccessLink(data) {
            Common.ShowBox(data.Status, data.Message, "操作")
        }

        function onAjaxComplete() {
            $('#ModalEdit').modal();
        }
        function onBegin() {
            $("#btnSave i").removeClass("fa-save").addClass("fa-spinner fa-spin")
        }
        function onComplete() {
            $("#btnSave i").removeClass("fa-spinner fa-spin").addClass("fa-save")
        }


        function updateSuccess(data) {
            var title = '@ViewBag.PageTitle';
            Common.ShowBoxWithFuncBack(data, title, submitSuccess);
        }

        function submitSuccess(id,htmlData) {
            $('#ModalEdit').modal('hide');
            location.reload();

            //if (id > 0) {
            //    var cid = "container" + id;
            //    $("#" + cid).replaceWith(htmlData);
            //} else {
            //    $("#tbList").html(htmlData);
            //}

        }


        $(function () {
            $(".open").on("click", function (e) {
                e.preventDefault();
                var el = $(this).attr("data-for");
                $(this).find("i").toggleClass("fa-minus-circle")
                $("tr[data-parent=" + el + "]").slideToggle();
            })
            //active
            $(document).on("click", '.active-item', function (e) {
                e.preventDefault();

                var url = $(this).attr('data-url'), title = $(this).attr('title'), that = $(this);
                Common.SingleActionWithFuncBack(url, title, that, submitFunc);

            });

            function submitFunc(that, data) {
                var tr = that.closest('.item-container').replaceWith(data);
            }


            $(document).on("change", '#PageSize', function (e) {
                e.preventDefault();

                var url = "@Url.Action("PageSizeSet")", title = "分页设置", pageSize = $(this).val();
                Common.PageSizeSet(url, title, pageSize, setPageSizeFunc);

            });

            function setPageSizeFunc() {
                location.reload();
            }


            //delete
            $(document).on("click", '.delete-item', function (e) {
                e.preventDefault();

                var url = $(this).attr('data-url');
                var that = $(this);
                bootbox.setLocale("zh_CN");
                bootbox.confirm("你确定要删除此项吗？", function (result) {
                    /*DELETE*/
                    if (result) {
                        var title = "@ViewBag.Title";
                        Common.DeleteItem(url, title, that);
                    }

                });

            });


        });
    </script>

}